### Starting build.
# Target: test.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules test.ml > test.ml.depends # cached
# Target: assembly.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:assembly.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules assembly.ml > assembly.ml.depends # cached
# Target: assembly.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:assembly.cmo, file:assembly.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o assembly.cmo assembly.ml # cached
# Target: compile.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:compile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules compile.ml > compile.ml.depends
# Target: errors.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:errors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules errors.ml > errors.ml.depends # cached
# Target: exprs.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:exprs.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules exprs.ml > exprs.ml.depends # cached
# Target: exprs.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:exprs.cmo, file:exprs.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o exprs.cmo exprs.ml # cached
# Target: pretty.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:pretty.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules pretty.ml > pretty.ml.depends # cached
# Target: pretty.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:pretty.cmo, file:pretty.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o pretty.cmo pretty.ml # cached
# Target: errors.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:errors.cmo, file:errors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o errors.cmo errors.ml # cached
# Target: phases.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:phases.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules phases.ml > phases.ml.depends # cached
# Target: phases.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:phases.cmo, file:phases.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o phases.cmo phases.ml # cached
# Target: runner.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:runner.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules runner.ml > runner.ml.depends # cached
# Target: compile.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:compile.cmo, file:compile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o compile.cmo compile.ml
+ ocamlfind ocamlc -c -package oUnit,extlib,unix -o compile.cmo compile.ml
File "compile.ml", line 388, characters 15-2484:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(ELetRec (_, _, _)|ELambda (_, _, _))
File "compile.ml", line 768, characters 5-2179:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Print|PrintB)
File "compile.ml", line 838, characters 3-5088:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
EqB
File "compile.ml", line 1098, characters 46-90:
Warning 10: this expression should have type unit.
File "compile.ml", line 554, characters 10-31:
Warning 11: this match case is unused.
File "compile.ml", line 670, characters 8-16:
Warning 11: this match case is unused.
# Target: lexer.mll, tags: { package(oUnit,extlib,unix), extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet, traverse }
/home/baba/.opam/4.07.0/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { package(oUnit,extlib,unix), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
ocamlyacc -v parser.mly # cached
# Target: parser.mli.depends, tags: { package(oUnit,extlib,unix), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(oUnit,extlib,unix), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o lexer.cmo lexer.ml # cached
# Target: runner.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:runner.cmo, file:runner.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o runner.cmo runner.ml
# Target: test.cmo, tags: { package(oUnit,extlib,unix), byte, compile, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit,extlib,unix -o test.cmo test.ml
# Target: assembly.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:assembly.cmx, file:assembly.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o assembly.cmx assembly.ml # cached
# Target: exprs.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:exprs.cmx, file:exprs.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o exprs.cmx exprs.ml # cached
# Target: pretty.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:pretty.cmx, file:pretty.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o pretty.cmx pretty.ml # cached
# Target: errors.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:errors.cmx, file:errors.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o errors.cmx errors.ml # cached
# Target: phases.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:phases.cmx, file:phases.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o phases.cmx phases.ml # cached
# Target: compile.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:compile.cmx, file:compile.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o compile.cmx compile.ml
+ ocamlfind ocamlopt -c -package oUnit,extlib,unix -o compile.cmx compile.ml
File "compile.ml", line 388, characters 15-2484:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(ELetRec (_, _, _)|ELambda (_, _, _))
File "compile.ml", line 768, characters 5-2179:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Print|PrintB)
File "compile.ml", line 838, characters 3-5088:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
EqB
File "compile.ml", line 1098, characters 46-90:
Warning 10: this expression should have type unit.
File "compile.ml", line 554, characters 10-31:
Warning 11: this match case is unused.
File "compile.ml", line 670, characters 8-16:
Warning 11: this match case is unused.
# Target: parser.ml.depends, tags: { package(oUnit,extlib,unix), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit,extlib,unix -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o lexer.cmx lexer.ml # cached
# Target: runner.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:runner.cmx, file:runner.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o runner.cmx runner.ml
# Target: test.cmx, tags: { package(oUnit,extlib,unix), compile, extension:cmx, extension:ml, file:test.cmx, file:test.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package oUnit,extlib,unix -o test.cmx test.ml
# Target: test.native, tags: { package(oUnit,extlib,unix), dont_link_with, extension:native, file:test.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package oUnit,extlib,unix assembly.cmx exprs.cmx pretty.cmx errors.cmx phases.cmx compile.cmx parser.cmx lexer.cmx runner.cmx test.cmx -o test.native
# Compilation successful.
